pico-8 cartridge // http://www.pico-8.com
version 18
__lua__


global = {
	state = 0, --0 menu, 1 game, 2 end screen
	gravity = 0.25,
	friction = 0.5,
	timeLeftForNextDelivery = 600,
	timeElapsed = 0,
	inited = false,
	packageText = "",
	messageDuration = 150,
	showMessageUntil = 0,
	lastPickedUp = 0,
	showCombo = 0,
	comboCounter = 0,
	endscreenTime = 0
}

player = {
	x = 1,
	y = 1,
	ax = 0,
	ay = 0,
	speed = 3,
	maxSpeed = 7.5,
	maxFall = 3,
	jumpPower = 4,
	isGrounded = false,
	sp = 1,
	direction = 1, -- 0 facing left, 1 right
	flip = false,
	hasPickup = false,
	score = 0,
	invDuration = 0.5,
	invLasts = 0,
	boost = 90,
	maxBoost = 90,
	boostSpeed = 6,
	isBoosted = false
}
crect = {
	x,
	y
}

crows = {}
-- need one pickup point + destination
pickupPoints = {} --list
destinationPoints = {} --list
-- randomize destination point for pickup point
pedestrians = {}
possibleInteractionPoints = {}
particles = {}
messages = {
	"i need the delivered: ",
	"drop this for me at: ",
	"hey kid, drop this to: ",
	"can you deliver this? "
}
combo = {
	"nice!",
	"outstanding!",
	"amazing!",
	"awesome!",
	"epic!",
	"stylish!",
	"omega!"
}

function _init()

end

function init_game()
	player.x = 1 -- starting pos x
	player.y = 1 -- starting pos y
	player.score = 0
	player.hasPickup = false
	player.boost = player.maxBoost
	player.isBoosted = false


	crows = {}
	pickupPoints = {} --list
	destinationPoints = {} --list
	possibleInteractionPoints = {}
	particles = {}
	add_crow(20,5,-1.5)
	add_crow(25,5,-1.5)
	add_crow(30,8,2)
	add_crow(1,4,-1.5)
	add_crow(5,7,1.5)
	add_crow(20,6,2)
	add_crow(20,8,3)

	add_points(3,14) --Radio
	add_points(8,14)
	add_points(22,14)
	add_points(23,6)
	add_points(37,14)
	add_points(49,14)
	add_points(54,14)
	add_points(56,14)
	add_points(52,8)
	add_points(66,14)
	add_points(75,14) --post
	add_points(95,14) --MecDon
	add_points(101,14)
	add_points(105,14)
	add_points(103,10)
	add_points(119,14) -- Hospital
	generate_new_delivery()


	for i=1,20 do
		add_pedestrian(flr(rnd(127)) + 1,rnd(2)+0.1)
	end

	for i=1,13 do
		add_crow(flr(rnd(127)) + 1,flr(rnd(5)) + 2, rnd(3)+0.1)
	end

	global.timeLeftForNextDelivery = 600
	global.timeElapsed = 0
	global.comboCounter = 0
	global.showMessageUntil = 0
	global.lastPickedUp = 0

	global.inited = true
end

function add_crow(_x,_y,_speed)
	local crow = {
		x = _x*8,
		y = _y*8,
		speed = _speed
	}
	add(crows,crow)
end

function add_pedestrian(_x,_speed)
	local ped = {
		x = _x*8,
		y = 14*8,
		speed = _speed
	}
	add(pedestrians,ped)
end

function add_delivery(pickup_x,pickup_y,dest_x,dest_y)
 	local pickup = {
 		-- *8 cuz calling with tile coord
 		x = pickup_x*8,
 		y = pickup_y*8
 	}
 	local dest = {
 		x = dest_x*8,
 		y = dest_y*8
 	}
 	add(pickupPoints,pickup)
 	add(destinationPoints,dest)
 end

 function add_points(_x,_y)
 	local point = {
 		x = _x*8,
 		y = _y*8
 	}
 	add(possibleInteractionPoints,point)
 end

function add_particle(_x,_y,_maxAge,_color,_tpe)
	local p = {
		x = _x,
		y = _y,
		lifetime = 0,
		maxAge = _maxAge,
		color_range = _color,
		clr = _color[1],
		tpe = _tpe
	}
	add(particles,p)
end


function generate_new_delivery()
	local pickup = possibleInteractionPoints[flr(rnd(#possibleInteractionPoints))+1]
	local dest = possibleInteractionPoints[flr(rnd(#possibleInteractionPoints))+1]
	while dest == pickup do
		dest = possibleInteractionPoints[flr(rnd(#possibleInteractionPoints))+1]
	end
	
	

	add(pickupPoints,pickup)
	add(destinationPoints,dest)
end

function check_collisions_with_obstacles()
	-- could be done in existing update function
	for crow in all(crows) do
		if collide_rect(to_rect(player,8,8),to_rect(crow,8,8)) then
			if player.ay > 0 then
				-- ay is negative when jumping
				-- ay is positive when falling
				-- so substract to add jump power
				sfx(0)
				player.ay -= 6
			else
				if (time() > player.invLasts) then
					global.timeLeftForNextDelivery -= 30
					player.invLasts = time() + player.invDuration
				end
			end
		end
	end
	for ped in all(pedestrians) do
		if collide_rect(to_rect(player,8,8),to_rect(ped,8,8)) then
			if player.isBoosted then
				player.ax = 0
				player.boost = 0
			end
		end
	end
	if player.x > 127*8 then
		player.ax = 0
		player.x = 127*8
	elseif player.x < 0 then
		player.ax = 0
		player.x = 0
	end
end


function collide_rect(rect_1,rect_2)
	if ((rect_1.x1 > rect_2.x2) or
		(rect_2.x1 > rect_1.x2) or
		(rect_1.y1 > rect_2.y2) or
		(rect_2.y1 > rect_1.y2)) then
		return false
	end
	return true
end

function to_rect(obj,w,h)
	local r = {}
	r.x1 = obj.x
	r.x2 = obj.x + w - 1
	r.y1 = obj.y
	r.y2 = obj.y + h - 1
	return r
end

function collide_map(obj,width,heigth,dir,flag)
	local x = obj.x
	local y = obj.y
	local w = width
	local h = heigth

	local x1 = 0
	local x2 = 0
	local y1 = 0
	local y2 = 0

	if dir==0 then --left
	   x1=x-1  y1=y+1
	   x2=x    y2=y+h-1

	elseif dir==1 then --rigth
	   x1=x+w    y1=y+1
	   x2=x+w  y2=y+h-1

	elseif dir==2 then --up
		x1=x+1    y1=y-1
		x2=x+w-2  y2=y

	elseif dir==3 then --down
		x1=x+1    y1=y+h
		x2=x+w-2    y2=y+h
	end


	crect.x1 = x1
	crect.x2 = x2
	crect.y1 = y1
	crect.y2 = y2

	x1/=8
	x2/=8
	y1/=8
	y2/=8

	if fget(mget(x1,y1), flag)
	or fget(mget(x1,y2), flag)
	or fget(mget(x2,y1), flag)
	or fget(mget(x2,y2), flag) then
	    return true
	else
	    return false
	end
end

function animate(object,starterFrame,frameCount,animSpeed,flipped)
	if(not object.tickCount) object.tickCount=0
	if(not object.spriteOffset)object.spriteOffset=0

	object.tickCount+=1

	if(object.tickCount%(30/animSpeed)==0) then
		object.spriteOffset+=1
		if(object.spriteOffset>=frameCount) object.spriteOffset=0
	end

	object.actualframe=starterFrame+object.spriteOffset
	spr(object.actualframe,object.x,object.y,1,1,flipped)
end


function control_player()
	if not (player.isBoosted) then
		player.ax = 0
	end
	-- movement code
	if (btn(0)) then
	 	player.ax -= player.speed

	end
	if (btn(1)) then 
		player.ax += player.speed
	end
	if btnp(4) and (player.isGrounded) then
		player.ay -= player.jumpPower
		sfx(0)
	end
	if btn(5) then
		if player.boost > 0 then
			player.isBoosted = true
			player.boost -= 1	
		end
	else
		player.isBoosted = false
	end

	if player.boost <= 0 then
		player.isBoosted = false
	end
	if player.isBoosted == false then
		if player.boost < player.maxBoost then
			player.boost += 1
		end
		if player.boost > player.maxBoost then
			player.boost = player.maxBoost
		end
	end
	-- look direction
	if player.ax > 0 then
		player.flip = false
		if player.ax < 0 then
			player.ax = 0
		end
	elseif player.ax < 0 then
		player.flip = true
		if player.ax > 0 then
			player.ax = 0
		end
	end

	if player.isBoosted then
		if player.ax < 0 then
				add_particle(player.x+7,player.y+1,20,{1},1)
				add_particle(player.x+7,player.y+3,20,{1},1)
				add_particle(player.x+7,player.y+5,20,{1},1)
		elseif player.ax > 0 then
				add_particle(player.x,player.y+1,20,{1},1)
				add_particle(player.x,player.y+3,20,{1},1)
				add_particle(player.x,player.y+5,20,{1},1)
		end
	end

	-- vertical shit
	if player.ay >= 0 then
		player.isGrounded = false
		if collide_map(player,8,8,3,0,player.ax,player.ay) then
			player.isGrounded = true
			--player.spr = player.walk_spr
			player.ay = 0
			player.y-=(player.y+8)%8
		end
	elseif player.ay < 0 then
		--player.spr = player.jump_spr
		player.isGrounded = false
		if collide_map(player,8,8,2,0,player.ax,player.ay) then
			if not (collide_map(player,8,8,2,1,player.ax,player.ay)) then
				player.ay = 0
			end
		end
	end

	-- noramile vertical speed
	if player.flip then
		if player.ax < - player.maxSpeed then
			player.ax = -player.maxSpeed
		end
	else
		if player.ax > player.maxSpeed then
			player.ax = player.maxSpeed
		end
	end

	--normalize vertical speed
	if not (player.isGrounded) then
			player.ay += global.gravity
		if player.ay > player.maxFall then
			player.ay = player.maxFall
		end
	end

	if player.isBoosted then
		player.ax = player.boostSpeed*sgn(player.ax)
	end
	player.x += player.ax
	player.y += player.ay

end

function _update()

	if global.state == 0 then
		update_menu()
	elseif global.state == 1 then
		if not global.inited then
			init_game()
		end
		update_game()

	else
		update_endscreen()
	end
end

function update_menu()
	if btnp(5) then
		global.state = 1
	end
end

function update_game()
	if not (global.timeLeftForNextDelivery <= 0) then
		if (global.lastPickedUp < time()) then
			global.comboCounter = 0
		end
		global.timeLeftForNextDelivery -= 1
		global.timeElapsed += 1

		control_player()
		update_crows()
		update_deliveries()
		update_pedestrians()
		upadte_particles()

		check_collisions_with_obstacles()
	else
		sfx(3)
		-- state 2 is endscreen
		global.inited = false
		global.state = 2
		global.endscreenTime = time() + 5
	end
end

function update_endscreen()
	printh(time().." "..global.endscreenTime)
	if  time() > global.endscreenTime then
		if btnp(4) then
		
			global.state = 0
		end
	end
end


function update_crows()
	for crow in all(crows) do
		crow.x += crow.speed
		--flip them on either side of the map
		if (crow.x < 0) or (crow.x > 127*8)then
			crow.speed = crow.speed*(-1)
		end
	end
end

function update_deliveries()
	if not (#pickupPoints == 0) then
		if not (player.hasPickup) then
			if(time()%1 > 0.9) then
				add_particle(pickupPoints[1].x+4,pickupPoints[1].y+4,40,{14},0)
				add_particle(pickupPoints[1].x+4,pickupPoints[1].y+4,20,{14},0)
			end
			if (collide_rect(to_rect(player,8,8),to_rect(pickupPoints[1],8,8))) then
				player.hasPickup = true
				
				global.packageText = messages[flr(rnd(#messages))+1]
				sfx(1)
				if pickupPoints[1].x == 95*8 then
					global.packageText = "mecdon order, deliver!"
				elseif pickupPoints[1].x == 75*8 then
					global.packageText = "letter to this adress!"
				end
				if destinationPoints[1].x == 3*8 then
					global.packageText = "to the radio tower!"
				elseif destinationPoints[1].x == 119*8 then
					global.packageText = "to the hospital pls!"
				end


				global.showMessageUntil = time() + global.messageDuration
				global.lastPickedUp = time() + 10
				del(pickupPoints,pickupPoints[1])
			end
		end
	end
	if not (#destinationPoints == 0) then
		if (player.hasPickup) then
			if(time()%1 >  0.9) then
				add_particle(destinationPoints[1].x+4,destinationPoints[1].y+4,40,{12},0)
				add_particle(destinationPoints[1].x+4,destinationPoints[1].y+4,20,{12},0)

			end
			if (collide_rect(to_rect(player,8,8),to_rect(destinationPoints[1],8,8))) then
				sfx(2)
				if global.lastPickedUp > time() then
					global.lastPickedUp = time() + 150
					global.comboCounter += 1
				end
				global.packageText = ""
				player.hasPickup = false
				global.timeLeftForNextDelivery += 420
				player.score += 1
				del(destinationPoints,destinationPoints[1])
				generate_new_delivery()
			end
		end
	end
end

function update_pedestrians()
	for ped in all(pedestrians) do
		ped.x += ped.speed
		--flip them on either side of the map
		if (ped.x < 0) or (ped.x > 127*8)then
			ped.speed = ped.speed*(-1)
		end
		if rnd() < 0.05 then
			ped.speed = ped.speed*(-1)
		end
	end
end

function upadte_particles()
	for particle in all(particles) do
		particle.lifetime += 1
		if particle.lifetime >= particle.maxAge then
			del(particles,particle)
		end

		-- 0 circle
		if particle.tpe == 0 then
			local idx = particle.lifetime / particle.maxAge
			idx = 1 + flr(idx*#particle.color_range)
			particle.clr = particle.color_range[idx]
		end
 	end
end

function _draw()
	if global.state == 0 then
		draw_menu()
	elseif global.state == 1 then
		if global.inited then 
			draw_game()
		end
	else
		draw_endscreen()
	end
end

function draw_menu()
	cls()
	map()
	print("neon",42,0,14)
	print("runner",60,0,12)
	if(time()%1 > 0.5) then
		print("press X to play",32,8,rnd(15)+1)
	end
end

function draw_game()
	cls()
	map()
	draw_crows()
	draw_deliveries()
	draw_pedestrians()
	draw_particles()

	--animation
	if not (player.ax == 0) then
		animate(player,3,4,10,player.flip)
	else
		animate(player,1,2,2,player.flip)
	end
	--rectfill(crect.x1,crect.y1,crect.x2,crect.y2)
	camera(player.x-64,player.y-64)
	draw_ui()	
end

function draw_endscreen()
	cls()
	map()
	print("time is up",48,0,12)
	print("time elapsed: "..global.timeElapsed/30,48,8,14)
	print("deliveries done: "..player.score,48,16,12)
	if(time()%1 > 0.5) then
		print("press c to play",48,24,rnd(15)+1)
	end
	-- print time elapsed
	-- print score
	camera(0,0)
end

--animate(object,starterFrame,frameCount,animSpeed,flipped)
function draw_crows()
	for crow in all(crows) do
		local flipped = false
		if crow.speed < 0 then
			flipped = true
		end
		animate(crow,62,2,3,flipped)
	end
end

function draw_pedestrians()
	for ped in all(pedestrians) do
		local flipped = false
		if ped.speed < 0 then
			flipped = true
		end
		animate(ped,48,2,3,flipped)
	end
end

function draw_deliveries()
	if not (#pickupPoints == 0) then
		if not (player.hasPickup) then
			if(time()%1 > 0.5) then
				rectfill(pickupPoints[1].x,pickupPoints[1].y+8,pickupPoints[1].x+8,pickupPoints[1].y+16,0)
				spr(46,pickupPoints[1].x,pickupPoints[1].y+8)
			end
		end
	end
	if not (#destinationPoints == 0) then
		if(time()%1 > 0.5) then
			rectfill(destinationPoints[1].x,destinationPoints[1].y+8,destinationPoints[1].x+8,destinationPoints[1].y+16,0)
			spr(47,destinationPoints[1].x,destinationPoints[1].y+8)
		end
	end
end

function draw_particles()
	for particle in all(particles) do
		if particle.tpe == 0 then
			circ(particle.x,particle.y,flr(particle.lifetime/3),particle.clr)
		else
			pset(particle.x,particle.y,rnd(15)+1)
		end
	end
end

function draw_ui()
	--print time left
	-- draw borders

	rectfill(player.x-30,player.y-64,player.x+30,player.y-56,6)
	rectfill(player.x-29,player.y-63,player.x+29,player.y-57,0)
	print("time left: "..flr(global.timeLeftForNextDelivery/30),player.x-28,player.y-62,14)
	
	--boost
	rectfill(player.x-29,player.y-54,player.x+29,player.y-54,2)
	local length = 59
	local perc = player.boost/player.maxBoost
	local toDraw = length * perc
	rectfill(player.x-29,player.y-54,player.x-29+toDraw,player.y-54,rnd(15)+1)


	if(time()%1 > 0.5) then
		if not player.hasPickup then
			if not (#pickupPoints == 0) then
				if (player.x > pickupPoints[1].x) then
					spr(30,player.x-64,player.y-60)
				else 
					spr(31,player.x+56,player.y-60)
				end
			end
		else 
			if not (#destinationPoints == 0) then
				if (player.x > destinationPoints[1].x) then
					spr(14,player.x-64,player.y-60)
				else 
					spr(15,player.x+56,player.y-60)
				end
			end
		end
	end

	--messages
	if global.showMessageUntil > time() then
		print(global.packageText,player.x-(#global.packageText*2)+sin(rnd()),player.y-52+cos(rnd()),12)
	end

	if not (global.comboCounter == 0) then
		if not (global.comboCounter > #combo ) then
			print(combo[global.comboCounter],player.x-(#combo[global.comboCounter]*2)+sin(rnd()),player.y-46+cos(rnd()),rnd(15)+1)
		elseif global.comboCounter < 10 then
			print("?!%#&?![]",player.x-9*2+sin(rnd()),player.y-46+cos(rnd()),rnd(15)+1)
		else
			print("\150\152\153\144",player.x-4*2+sin(rnd()),player.y-46+cos(rnd()),rnd(15)+1)
		end
	end
end


__gfx__
000000000000000000000000000000000000cc00000000000000cc00000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000cc0000000cc000000ff000000cc000000ff0000000000000000000000000000000000000000000000000000000000000cc000000cc000
00700700000cc000000ff0000000ff000022cc000000ff000022cc000000000000000000000000000000000000000000000000000000000000cc00000000cc00
00077000000ff000022cc0000022cc00004fccc00022cc00004fccc0000000000000000000000000000000000000000000000000000000000cccccccccccccc0
00077000022cc00004fccc00004ffccf004ffc0f004ffccf004ffc0f000000000000000000000000000000000000000000000000000000000cccccccccccccc0
0070070004fccc0004ff80f0000088000000880000008800000088000000000000000000000000000000000000000000000000000000000000cc00000000cc00
0000000004ffc0f000020e00007e02000002e000007e0200000e200000000000000000000000000000000000000000000000000000000000000cc000000cc000
00000000006007000060070000000600000670000000060000067000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ee000000ee000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ee00000000ee00
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eeeeeeeeeeeeee0
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000eeeeeeeeeeeeee0
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ee00000000ee00
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ee000000ee000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002200000000000000ee000000cc000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022000000cc00000eeee0000cccc00
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022000000ff0000eeeeee00cccccc0
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f22200000ccc000e0ee0e00c0cc0c0
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ff80f000cf8f00000ee000000cc000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020e0600002600000ee000000cc000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060070600060600000ee000000cc000
0000000000000000000000000000cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000e000000000000000
0000cc000000cc000000cc000000ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000ee00000000000000
0000cc000000cc000000ff000022cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000eee0ee000000ee00
0000cc00000cccc00022cc00004fccc0000000000000000000000000000000000000000000000000000000000000000000000000000000000eeee0e0000ee0e0
000ccccc000ccc0c004ffccf004ffc0f000000000000000000000000000000000000000000000000000000000000000000000000000000000eeeeeee0eeeeeee
0000cc000000cc00000088000000880000000000000000000000000000000000000000000000000000000000000000000000000000000000e0ee0000eeee0000
00cc0c00000cc000007e0200000e2000000000000000000000000000000000000000000000000000000000000000000000000000000000000e000000eee00000
00000c00000cc0000000060000067000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000eeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000606600060006000600066060000000005555555555555555555555550000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0eeeeeee
00000000666606060606066660666660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000606600060606000660666060000000000555555555555555555555500000000000000000666666666666666606666666666666666666666000000000
00000000666606660606660660666660000000000500500550055005500500500000000000000000600000066600000606006006600660066006006000660660
00000000606606660006000660666060000000000500500550055005500500500000000000000000600000066600060606006006600660066006006000660660
00000000666666666666666666666660000000000500500550055005500500500000000000000000600000066600060606006006600660066006006000660660
00000000006060000000000000060600000000000555555555555555555555500000000000000000666666666600060606666666666666666666666000000000
00000000eeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6666666660666600066660600000000000000000055555555555555555555550000000000666666666666666666666600eeeeeeeeeeeeeeeeeeeeeee0eeeeeee
00000000666660060066666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00060000606660666066606000000000000000000055555555555555000005000000000000666666666666660000000000666666666666666666666000000006
00060000666660060066666000000000000000000055555555555555000005000000000000666666666666660000000000666666666666666666666000000006
00000000606666000666606000000000000000000055555555555555000005000000000000666666666666660000000000666666666666666666666000000006
00000000666666666666666000000000000000000055555555555555000005000000000000666666666666666666660000666666666666666666666000000006
00060000006060000006060000000000000000000000000000000000000005000000000000666666000000000000000000666666666666666666666000000006
00060000eeeeeeeeeeeeeee000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000600066666660006000000000000000005555555555555555000000000000000000000000000000000000000066666666666666666666666606666666
eeeeeeee666666060666666000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000600660606066006000000000000000005555555555555555000000000000000000000000000000000000000006666666666666666666666000000000
00000000666660606066666000000000000000005000000555000005000000000000000000000000000000000000000006006006600660066006006000660660
00000000606660666066606000000000000000005000000555000505000000000000000000000000000000000000000006006006600660066006006000660660
00000000666666666666666000000000000000005000000555000505000000000000000000000000000000000000000006006006600660066006006000660660
66000660006060000006060000000000000000005555555555000505000000000000000000000000000000000000000006666666666666666666666000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000555555555555555555555550000000000000000666666666666666606666666666666666666666606666666
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000055555555555555555555500000000000000000666666666666666600666666666666666666666000000006
00000000000000000000000000000000000000000055555555555555555555500000000000000000600000066600000600666666666666666666666000000006
00000000000000000000000000000000000000000055555555555555555555500000000000000000600000066600060600666666666666666666666000000006
00000000000000000000000000000000000000000055555555555555555555500000000000000000600000066600060600666666666666666666666000000006
00000000000000000000000000000000000000000055555555555555555555500000000000000000666666666600060600666666666666666666666000000006
0000000000000000000000000000000000006660066600000006666000066660eeeeeeeeeeeeeeee000600000000000000000000000000000000000000000000
00000000000000000000000000000000000066666666000000066660000666600606060606060600000600000000000000000000000000000000000000000000
00000000000000000006660000000000000066600666000000066666000666600606060606060600006660000000000000000000000000000000000000000000
06666660000000000006660000000000000066600666000000066666000666600606060606060600000600000000000000000000000000000000000000000000
06666660000000000006660000000000000066600666000000066666000666600606060606060600066666000000000000000000000000000000000000000000
06666660000000000000000000606000000066666666000000066660000666660606060606060600000600000000000000000000000000000000000000000000
00000000006660000006060000660000000066600666000000066660000666660606060606060600666666600000000000000000000000000000000000000000
00600600006660000006060000066000000066600666000000066660000666600606060606060600000600000000000000000000000000000000000000000000
0000000000000000000000000000000000006660066600000006666000066660eeeeeeeeeeeeeeee000600000000000000000000000000000000000000000000
55555555555555555500000555555555555066666666055555066660550666600656565656565656000600000000000000000000000000000000000000000000
00000000000000000006660000000000000066600666000000066666000666600656565656565656000606000000000000000000000000000000000000000000
06666660555555555506660555555555555066600666055555066666550666600656565656565656000060000000000000000000000000000000000000000000
06666660555555555506660550000055555066600666055555066666550666600656565656565656000060600000000000000000000000000000000000000000
06666660500000555500000550606055555066666666055555066660550666660656565656565656000060000000000000000000000000000000000000000000
00000000506660555506060550660055555066600666055555066660550666660656565656565656000606000000000000000000000000000000000000000000
00600600006660000006060000066000000066600666055500066660000666600656565656565656000600000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000005550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05555550000000000005550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05555550000000000005550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
05555550000000000000000000505000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000005550000005050000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00500500005550000005050000055000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001030303000000000000030303030303000303000000000000000000030303030103030000000000000000000000000000000000000000000000000000000000
0000000000000000030300000000000000000000000000000303000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000008a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000839a000000000000000000000000000000000082810000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000007c7f00000000000000a200a30000000000004c4d4e4f4f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000007c7f000000000000757676765700000000007c7d7e7f7f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a2a200665700a300000000000000000000000000a100a10000000000000000000000000000000000000000000000000000000000
0000007c7f000000000075767676767657000000817c7d7b7f7f000000000000000000000000000000000000000000000000830000000000008300000000000000000000000000000000000075764676467657570000000000000000000000754676467757008100810000000000000000000000000000000000000000000000
0000007c7f00000000007546769246765700005c4d4d4d4d4d4d4f5f4f000000a300a20000000000a200a3000000007c6d7e7f008100007c6d7e7f0000000000000000000000000000000000757646764676575700818100000000000000007546764677575c4d5d4d5e4f5f0000000000000000000000000000000000000000
0000007c7f000000000075464c5d5f555700007c6d6d7d7d6d6d6f7f6f0000007576765757000075767657570000847c6d7e7f007b7f007c6d7e7f764677008100000000000000000000000055564676467657574c4d5d5f008300000000007546764677577c6d7d6d7e6f7f00a2000000000000515283000000830082000000
0000007c7f000080000075467c7d6f555700865c4d4d7d7d4d4d4f5f4f0000754646764676764676464676575757005c4d4d5d4d4d4d4d5d4d5e5f564677004c4e5f0000810000000081004142439176467657577c6d7e7f007b7f000000007546764677577c6d7d6d7e6f7f764657000000007c6d6d7d7f005c4d4d5d5f0000
0000007c7f006c7d6d7d6d6f7c7d7f555700877c7d7d7d7d7d7d7f7f7f0000754646764676764676464676575757007c6d7e7f0000a2007c6d7e7f954677006c6e7f004c4e5f00005c4d5d4d4d5d4d4e5f5f57575c5d5d5d5d5d5f000000007546764677577c7d7b7d7e7f7f764657000000007c6d6d7d7f007c6d6d7d7f0000
0000007c7f004c5d4d5d4e4f5c4d5f955700007c6d6d7d7d6d6d6f7f6f0000754646764676764676464676575757007c6d7e7f004576467c6d7e7f764677006c6e4d4d5d4e5f00007c6d7d6d6d7d6d7e7f7f57577c6d6d6d6d6e7f008161627591765c4a4a5d5d4a4a5e5f5f764657000000005c4d4d5d4d4d5d4d4d5d5f0000
0000007c7f006c7d6d7d6d6f7c7d7f555700005c4d4d7d7d4d4d4f5f4f0000757656569056925693565676575757847c6d7e7f007591765c5d5e5f764677006c6e6d6d7d6e7f00007c6d7d6d6d7d6d7e7f7f57577c6d6d6d6d6e7f005c4a4a4a5f757c7a7a7d7d7a7a7e7f7f764657000000007c6d6d7d6d6d7d6d6d7d7f0000
00007c7b7f004c5d4b5d4e4f5c4e5f575700007c7d7d7b7b7d7d7f7f7f000075765c4a4a5d4b5d4a5f5f55575757007c7d7b7f00754a4b7c7b7e7f766677006c6e7a7b7d7a7f00007c7d7d7b7b7d7d7e7f7f577c7b7a7a7d7a7a7b7e7c7a7a7b7f757c7a7a7b7d7a7a7b7f7f999999888888897c6d6d7d7b7b7d6d6d7d7f0088
5050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050505050
6060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060606060
__sfx__
000100001305014050150501605018050190501c0501e05022050240500e000110001400011000170001f00015000180001b00000000000000000000000000000000000000000000000000000000000000000000
00050000281502b15031150321502a15026150281002b1002f1002710025100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00060000293202b3202c3302f330303402b34029330233001f3000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300003000030000300
001000001f55022550245502555024550215501e5501d5501e5501f550225501850016500185001e5001d5001a5001a5001c5001e5001d5001b50018500185001a5001c5001b5001a5001e5001d5001d5001d500
